<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_976837_warrant_0.ref_wot_for_parts</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>ref_wot_for_parts</name>
        <script><![CDATA[var ref_wot_for_parts = Class.create();
ref_wot_for_parts.prototype = {
    initialize: function() {},
    getreferenceworkorder: function() {
        var getworkorder = current.u_claimworkordertask.number;
        var getder = current.u_claimworkordertask;
        var dateTimeStr = current.u_claimworkordertask.opened_at;
        var dateArr = dateTimeStr.split(' ');
        var date = dateArr[0];
        //         gs.addInfoMessage(date);
        var answer = {};
        var rec = new GlideRecord('sm_asset_usage');
        rec.addQuery('service_order_task', getder);
        rec.query();
        while (rec.next()) {
            var aftpro = rec.affected_product.getDisplayValue();
            //             gs.addInfoMessage(aftpro + "  affected_product");
            var model = rec.model.getDisplayValue();
            //                         gs.addInfoMessage(rec.model.getDisplayValue());
            var almhard = new GlideRecord('alm_hardware');
            almhard.addQuery('display_name', aftpro);
            almhard.query();
            while (almhard.next()) {
                //                 gs.addErrorMessage(almhard.sys_id);
                var almharddpv = almhard.sys_id;
                var contracts = new GlideRecord('clm_m2m_contract_asset');
                contracts.addQuery('asset', almharddpv);
                contracts.query();
                while (contracts.next()) {
                    // 					gs.addInfoMessage(contracts.contract);
                    var contractslist = contracts.contract;
                    var almcontract = new GlideRecord('ast_contract');
                    almcontract.addQuery('sys_id', contractslist);
                    almcontract.query();
                    while (almcontract.next()) {
                        //                         gs.addInfoMessage(almcontract.sys_id);
                        //                         gs.addInfoMessage(almcontract.short_description);
                        var almvendor = almcontract.sys_id;
                        var coverages = new GlideRecord('u_mfg_coverages');
                        coverages.addQuery('u_contract', almvendor);
                        coverages.query();
                        partsvalues = '';
                        while (coverages.next()) {
                            var cvr = coverages.u_component.getDisplayValue();
                            if (cvr == model) {
                                var dateTime = gs.dateDiff(date, coverages.u_end_date, false);
                                var caldate = dateTime.split(' ');
                                var noofdays = caldate[0];
                                //                                 gs.addInfoMessage(noofdays);
                                if (noofdays > 0) {
                                    partsvalues += ',' + rec.sys_id;
                                }
                                return 'sys_idIN' + partsvalues;
                            }
                            //                             if (date > coverages.u_end_date) {
                            //                                 gs.addInfoMessage(coverages.u_model_components.getDisplayValue() + "  Component : " + coverages.u_component.getDisplayValue() + " Start Date : " + coverages.u_start_date + " End date :" + coverages.u_end_date);
                            //                             }
                        }
                    }
                }

            }

        }
        //         var workordr = new GlideRecord('sm_asset_usage');
        //         workordr.addQuery('service_order_task.number', getworkorder);
        // 		workordr.addQuery("model.cmdb_model_category", "!=", "9228241b070da1103941f1d08c1ed004");
        //         workordr.query();
        //         partsvalues = '';
        //         while (workordr.next()) {
        // //             gs.addErrorMessage(workordr.service_order_task.number);
        //             partsvalues+= ',' +workordr.sys_id;
        //         }
        //         return 'sys_idIN' +partsvalues;
    },

    type: 'ref_wot_for_parts'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-07-07 08:50:03</sys_created_on>
        <sys_id>07caac8b477f211008c85088c26d435c</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ref_wot_for_parts</sys_name>
        <sys_package display_value="Warranty Claims" source="x_976837_warrant_0">488bf91a4773211008c85088c26d4304</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Warranty Claims">488bf91a4773211008c85088c26d4304</sys_scope>
        <sys_update_name>sys_script_include_07caac8b477f211008c85088c26d435c</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-07-07 08:50:03</sys_updated_on>
    </sys_script_include>
</record_update>
