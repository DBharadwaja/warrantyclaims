<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_976837_warrant_0.updatepartfields</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>updating the parts field based on work order task.</description>
        <name>updatepartfields</name>
        <script><![CDATA[var updatepartfields = Class.create();
updatepartfields.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    workorderparts: function() {
        var userID = this.getParameter('sysparm_wo_task');
        var sysID = this.getParameter('syspar_sys_id');
        var claimid = this.getParameter('syspar_claimid');
        var eqpname = this.getParameter('syspar_eqp');
        var syspar_serial = this.getParameter('syspar_eqp_serial');

        var answer = {};
        var rec = new GlideRecord('sm_asset_usage');
        rec.addQuery('service_order_task', sysID);
        rec.query();
        while (rec.next()) {
            var aftpro = rec.affected_product.getDisplayValue();
            var assetcov = new GlideRecord('clm_m2m_contract_asset');
            var wotast = assetcov.asset.getDisplayValue();
            assetcov.addQuery(wotast, aftpro);
            assetcov.query();
            while (assetcov.next()) {
                gs.addErrorMessage('used');
                gs.addErrorMessage(assetcov.contract);
                // 					}
                //                     if (assetcov.asset == aftpro) { asset=7087eaa04776a110d02a41fe436d43e5
                //gs.addInfoMessage(assetcov.asset.getDisplayValue());
                // 					gs.addInfoMessage(assetcov.affected_product.getDisplayValue());
                // 					affected_product
                // gs.addErrorMessage(assetcov.contract.getDisplayValue());
            }







            //                         if (assetx != "MFG_AC_Coolant") {
            //                     gs.addInfoMessage(rec.asset.getDisplayValue());
            //                     gs.addInfoMessage(rec.name.toString());
            //                 //                     gs.addErrorMessage(rec.model.toString() + "name"); //mfg test
            //                 gs.addErrorMessage(rec.model.name + "name"); //mfg test
            //                     gs.addInfoMessage(rec.model.name.toString() + "d"); //mfg test
            //                     gs.addErrorMessage(rec.model.name.getDisplayValue() + "i"); //mfg test
            //                     gs.addInfoMessage(rec.quantity.getDisplayValue());
            //                     gs.addErrorMessage(rec.status);

            //                     answer["affectedmodel"] = rec.name.toString();
            // 					answer['shortdesp'] = rec.model.short_description.getDisplayValue();
            //                     answer["model"] = rec.model.toString();
            // 					answer["model_name"] = rec.model.name.toString();
            //                     answer["quantity"] = rec.quantity.getDisplayValue();
            //                     answer["status"] = rec.status.getDisplayValue();
            //                     answer["asset"] = rec.asset.toString();
            // 					answer['workorder'] = sysID;


            //                     var incGr = new GlideRecord('u_mfg_parts');
            //                     incGr.initialize(); // initialize the incGr object
            // 					incGr.u_partsquantity = rec.quantity.getDisplayValue();
            // 					incGr.u_partsasset = rec.model.name.toString();
            // 					incGr.u_partsstatus= rec.status.getDisplayValue();
            //                     incGr.u_claim_id = claimid;
            //                     incGr.insert();
            // // 					gs.addErrorMessage(claimid);
            //                 }
            //                 gs.addInfoMessage(rec.name.toString());
            // 				gs.addErrorMessage(rec.model.short_description.getDisplayValue());
            // 				gs.addInfoMessage(rec.quantity.getDisplayValue());
            // 				gs.addErrorMessage(rec.status);
        }
        //                 }
        // 	}
        //             }
        //         }
        return new JSON().encode(answer);
    },
    type: 'updatepartfields'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-07-07 08:51:36</sys_created_on>
        <sys_id>e1fa640f477f211008c85088c26d4393</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>updatepartfields</sys_name>
        <sys_package display_value="Warranty Claims" source="x_976837_warrant_0">488bf91a4773211008c85088c26d4304</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Warranty Claims">488bf91a4773211008c85088c26d4304</sys_scope>
        <sys_update_name>sys_script_include_e1fa640f477f211008c85088c26d4393</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-07-07 08:52:09</sys_updated_on>
    </sys_script_include>
</record_update>
